version: "3.7"

# replace short volume with long volume:
# "- (.*):(.*):[row]+"    ->    "- type: bind\n    source: $1\n    target: $2"


{{- define "DefaultBuildArgs" }}
        - DOCKER_IMAGE_VERSION={{  env.Getenv "DOCKER_IMAGE_VERSION" }}
        - PGID={{ env.Getenv "UID" }}
        - PUID={{ env.Getenv "GID" }}
        - USER={{ env.Getenv "USER" }}
        - DOCKER_GID='{{ awk "-F:" "$1 == \"docker\" {printf $3}" "/hostfs/etc/group" }}'
{{- end -}}

{{- define "DefaultEnv" -}}
      - PGID={{ env.Getenv "UID" }}
      - PUID={{ env.Getenv "GID" }}
      - USER={{ env.Getenv "USER" }}
      - DOCKER_GID={{ awk "-F:" "$1 == \"docker\" {printf $3}" "/hostfs/etc/group" }}
      - DOCKER_IMAGE_VERSION={{  env.Getenv "DOCKER_IMAGE_VERSION" }}
{{- end -}}

{{- define "DefaultVolumes" -}}
    {{- if (file.IsDir "/var/lib/lxcfs/proc") -}}
      - type: bind
        source: /var/lib/lxcfs/proc/cpuinfo
        target: /proc/cpuinfo
      - type: bind
        source: /var/lib/lxcfs/proc/diskstats
        target: /proc/diskstats
      - type: bind
        source: /var/lib/lxcfs/proc/meminfo
        target: /proc/meminfo
      - type: bind
        source: /var/lib/lxcfs/proc/stat
        target: /proc/stat
      - type: bind
        source: /var/lib/lxcfs/proc/swaps
        target: /proc/swaps
      - type: bind
        source: /var/lib/lxcfs/proc/uptime
        target: /proc/uptime
    {{- end -}}
    {{- if (file.Exists "/etc/timezone") -}}
      - type: bind
        source: /etc/timezone
        target: /etc/timezone
    {{- end -}}
    {{- if (file.Exists "/etc/localtime") -}}
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
    {{ end }}
    {{ if (file.Exists "/etc/machine-id") }}
      - type: bind
        source: /etc/machine-id
        target: /etc/machine-id
    {{ end }}
{{- end -}}

{{ define "DefaultXVolumes" }}
      {{ if (file.Exists "/tmp/.X11-unix") }}
      - type: bind
        source: /tmp/.X11-unix
        target: /tmp/.X11-unix
      {{ end }}
      {{ if (file.Exists "/run/user/{{ .Env.UID }}/pulse") }}
      - type: bind
        source: /run/user/{{ .Env.UID }}/pulse
        target: /run/user/{{ .Env.UID }}/pulse
      
      {{ end }}
      {{ if (file.Exists "./etc/pulse/pulse-client.conf") }}
      - type: bind
        source: ./etc/pulse/pulse-client.conf
        target: /etc/pulse/client.conf
      {{ end }}
      {{ if (file.Exists "{{ .Env.HOME }}/.config/fontconfig") }}
      - type: bind
        source: {{ .Env.HOME }}/.config/fontconfig
        target: {{ .Env.HOME }}/.config/fontconfig
      {{ end }}
      {{ if (file.Exists "{{ .Env.HOME }}/.config/gtk-3.0") }}
      - type: bind
        source: {{ .Env.HOME }}/.config/gtk-3.0
        target: {{ .Env.HOME }}/.config/gtk-3.0
      {{ end }}
      {{ if (file.Exists "{{ .Env.HOME }}/.Xresources") }}
      - type: bind
        source: {{ .Env.HOME }}/.Xresources
        target: {{ .Env.HOME }}/.Xresources
      {{ end }}
      - type: bind
        source: ./etc/ssl/certificates
        target: /etc/ssl/certificates
      {{ if (file.Exists "{{ .Env.HOME }}/.local/share/fonts") }}
      - type: bind
        source: {{ .Env.HOME }}/.local/share/fonts
        target: {{ .Env.HOME }}/.local/share/fonts
      {{ end }}
{{ end }}

{{- define "DefaultXEnv" -}}
  - DISPLAY={{ env.Getenv "DISPLAY" "null"}}
{{- end -}}

{{- define "DefaultService" -}}
    init: true
    restart: unless-stopped
{{- end }}

services:
  #####################
  # Ubuntu containers #
  #####################
  {{ with . }}
  {{ range slice "20.04" }}
  ubuntu-{{ . }}:
    {{ tmpl.Exec "DefaultService" . }}
    image: ohmymndy/ubuntu:{{ env.Getenv "DOCKER_IMAGE_VERSION" }}-{{ . }}
    build:
      args: 
        {{ tmpl.Exec "DefaultBuildArgs" . }}
        - VERSION={{ . }}
      context: dockerfiles
      dockerfile: ubuntu/Dockerfile
      target: ubuntu
    environment: 
      {{ tmpl.Exec "DefaultEnv" }}
      - VERSION={{ . }}
    volumes:
      {{ tmpl.Exec "DefaultVolumes" }}

  ubuntu-x11-{{ . }}:
    {{ tmpl.Exec "DefaultService" }}
    image: ohmymndy/ubuntu-x11:{{ env.Getenv "DOCKER_IMAGE_VERSION" }}-{{ . }}
    build:
      args: 
        {{ tmpl.Exec "DefaultBuildArgs" . }}
        - VERSION={{ . }}
      context: dockerfiles
      dockerfile: ubuntu/Dockerfile
      target: ubuntu-x11
    environment: 
      {{ tmpl.Exec "DefaultEnv" }}
      - VERSION={{ . }}
    volumes:
      {{ tmpl.Exec "DefaultVolumes" }}
  ubuntu-x11-hw-{{ . }}:
    {{ tmpl.Exec "DefaultService" }}
    image: ohmymndy/ubuntu-x11-hw-:{{ env.Getenv "DOCKER_IMAGE_VERSION" }}-{{ . }}
    build:
      args: 
        {{ tmpl.Exec "DefaultBuildArgs" . }}
        - VERSION={{ . }}
      context: dockerfiles
      dockerfile: ubuntu/Dockerfile
      target: ubuntu-x11-hw
    environment: 
      {{ tmpl.Exec "DefaultEnv" }}
      {{ tmpl.Exec "DefaultXEnv" }}
      - VERSION={{ . }}
    volumes:
      {{ tmpl.Exec "DefaultVolumes" }}
  {{ end }}
  {{ end }}

  firefox:
    {{ tmpl.Exec "DefaultService" }}
    image: ohmymndy/firefox:{{ env.Getenv "DOCKER_IMAGE_VERSION" }}
    build:
      args: 
        {{ tmpl.Exec "DefaultBuildArgs" . }}
        - VERSION=20.04
      context: dockerfiles
      dockerfile: ubuntu/Dockerfile
      target: firefox
    environment: 
      {{ tmpl.Exec "DefaultEnv" }}
      {{ tmpl.Exec "DefaultXEnv" }}
    volumes:
      {{ tmpl.Exec "DefaultVolumes" }}
      {{ tmpl.Exec "DefaultXVolumes" }}
    devices:
      - /dev/dri
    networks:
      - default
      - x11


  wine5:
    {{ tmpl.Exec "DefaultService" }}
    image: ohmymndy/wine5:{{ env.Getenv "DOCKER_IMAGE_VERSION" }}
    build:
      args: 
        {{ tmpl.Exec "DefaultBuildArgs" . }}
        - VERSION=20.04
      context: dockerfiles
      dockerfile: ubuntu/Dockerfile
      target: wine5
    environment: 
      {{ tmpl.Exec "DefaultEnv" }}
      {{ tmpl.Exec "DefaultXEnv" }}
    volumes:
      {{ tmpl.Exec "DefaultVolumes" }}
      {{ tmpl.Exec "DefaultXVolumes" }}
    devices:
      - /dev/dri
    networks:
      - default
      - x11

  #####################
  # Alpine containers #
  #####################
  alpine:
    {{ tmpl.Exec "DefaultService" }}
    image: ohmymndy/alpine:{{ env.Getenv "DOCKER_IMAGE_VERSION" }}
    build:
      args: 
        {{ tmpl.Exec "DefaultBuildArgs" . }}
      context: dockerfiles
      dockerfile: alpine/Dockerfile
      target: alpine
    environment: 
      {{ tmpl.Exec "DefaultEnv" }}
  glances:
    {{ tmpl.Exec "DefaultService" }}
    image: ohmymndy/glances:{{ env.Getenv "DOCKER_IMAGE_VERSION" }}
    build:
      args: 
        {{ tmpl.Exec "DefaultBuildArgs" . }}
      context: dockerfiles
      dockerfile: alpine/Dockerfile
      target: glances
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
    environment: 
      {{ tmpl.Exec "DefaultEnv" }}
 




networks:
  default:
  x11:
    name: x11